{"version":3,"file":"static/js/828.fbfeaba4.chunk.js","mappings":"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","sources":["components/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/SearchForm.jsx","pages/Movies.jsx","services/api.js","services/const.js"],"sourcesContent":["const Loader = () => {\n  return <div>Loading...</div>;\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieListItem\":\"MovieList_movieListItem__6DqRG\",\"linkStyle\":\"MovieList_linkStyle__TSwN3\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ol className={styles.movieList}>\n      {films.map(movie => (\n        <li key={movie.id} className={styles.movieListItem}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n            className={styles.linkStyle}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ value, onSubmit }) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (onSubmit) {\n      onSubmit(inputValue);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Movie Search:</h2>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        placeholder=\"Search movies...\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { handleSearch } from '../services/api';\nimport { SearchForm } from '../components/SearchForm';\nimport MovieList from '../components/MovieList/MovieList';\nimport Loader from '../components/Loader';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n\n  const updateQueryString = query => {\n    setSearchParams({ query });\n  };\n\n  const handleSearchSubmit = async query => {\n    try {\n      setLoading(true);\n      const movies = await handleSearch(query);\n      setSearchResults(movies);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Efectul va fi declanșat doar când se schimbă `movieName`\n  useEffect(() => {\n    if (movieName !== '') {\n      handleSearchSubmit(movieName);\n    } else {\n      // Dacă câmpul de căutare este gol, poți gestiona această situație\n      setSearchResults([]);\n    }\n  }, [movieName]);\n\n  return (\n    <div>\n      <SearchForm\n        value={movieName}\n        onChange={updateQueryString}\n        onSubmit={handleSearchSubmit}\n      />\n      {loading ? (\n        <Loader />\n      ) : searchResults.length === 0 && movieName ? (\n        <h2>No movie with this name. Try something else.</h2>\n      ) : (\n        <MovieList films={searchResults} />\n      )}\n      {/* Utilizarea MovieList pentru afișarea listei de filme */}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["_jsx","children","_ref","films","location","useLocation","className","styles","map","movie","Link","to","concat","id","state","from","cover","poster_path","title","SearchForm","value","onSubmit","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_jsxs","e","preventDefault","type","onChange","target","placeholder","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","loading","setLoading","handleSearchSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","query","movies","_context","prev","next","handleSearch","sent","t0","console","error","finish","stop","_x","apply","arguments","useEffect","Loader","length","MovieList","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","_ref2","_callee2","_context2","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}