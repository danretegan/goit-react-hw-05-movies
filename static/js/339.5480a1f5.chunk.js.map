{"version":3,"file":"static/js/339.5480a1f5.chunk.js","mappings":"+PACA,EAAgC,4BAAhC,EAA6E,6BAA7E,EAAuH,yBAAvH,EAAqK,iC,SCiErK,EA5Da,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAoB1B,OAlBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAetB,GAAS,KAAD,EAAxCkB,EAAQC,EAAAI,KACdhB,EAAQW,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElBM,QAAQC,MAAKP,EAAAK,IAAQ,QAKb,OALaL,EAAAC,KAAA,GAGrBO,YAAW,WACThB,GAAW,EACb,GAAG,KAAKQ,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,wBAEX,kBAZc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAcflB,GACF,GAAG,CAACb,KAGFgC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGxB,GACCsB,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KAEPC,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACa,IAAhB5B,EAAK+B,SACJL,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAqBL,SAClC5B,EAAKkC,KAAI,SAAAC,GAAK,OACbL,EAAAA,EAAAA,MAAA,OAAoBE,UAAWC,EAAsBL,SAAA,EACnDF,EAAAA,EAAAA,KAAA,OACEM,UAAWC,EACXG,IACED,EAAME,aAAY,kCAAAC,OACoBH,EAAME,cAAY,kCAG1DE,IAAKJ,EAAMK,iBAEbV,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAA0BL,SAAA,EACxCF,EAAAA,EAAAA,KAAA,KAAAE,SAAIO,EAAMM,QACVX,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,cAAYO,EAAMO,kBAZfP,EAAMQ,GAcV,MAIK,IAAhB3C,EAAK+B,SACJL,EAAAA,EAAAA,KAAA,OAAAE,SAAK,+CAMjB,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/cast/Cast.module.css?3f37","pages/cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__10h8W\",\"actorContainer\":\"Cast_actorContainer__VeHv5\",\"actorImage\":\"Cast_actorImage__KSjFQ\",\"actorTextContainer\":\"Cast_actorTextContainer__DCp2M\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../services/api';\nimport Loader from '../../components/Loader';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        // Simulăm o întârziere de 1 secundă înainte de a marca încărcarea ca fiind completă\n        setTimeout(() => {\n          setLoading(false);\n        }, 750);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <h2>Movie Cast:</h2>\n          {cast.length !== 0 && (\n            <div className={styles.castContainer}>\n              {cast.map(actor => (\n                <div key={actor.id} className={styles.actorContainer}>\n                  <img\n                    className={styles.actorImage}\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                        : `https://i.imgur.com/p3MsT9t.jpg`\n                    }\n                    alt={actor.original_name}\n                  />\n                  <div className={styles.actorTextContainer}>\n                    <p>{actor.name}</p>\n                    <p>Character: {actor.character}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n          {cast.length === 0 && (\n            <div>We don't have any cast for this movie.</div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieCast","sent","t0","console","error","setTimeout","finish","stop","apply","arguments","_jsx","_Fragment","children","Loader","_jsxs","length","className","styles","map","actor","src","profile_path","concat","alt","original_name","name","character","id"],"sourceRoot":""}