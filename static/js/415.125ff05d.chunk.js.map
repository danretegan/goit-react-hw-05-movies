{"version":3,"file":"static/js/415.125ff05d.chunk.js","mappings":"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","sources":["components/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js","services/const.js"],"sourcesContent":["import React from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"magnifying-glass-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"magnifying-glass-wrapper\"\n      glassColor=\"#c0efff\"\n      color=\"#e15b64\"\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieListItem\":\"MovieList_movieListItem__6DqRG\",\"linkStyle\":\"MovieList_linkStyle__TSwN3\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ol className={styles.movieList}>\n      {films.map(movie => (\n        <li key={movie.id} className={styles.movieListItem}>\n          ðŸŽ¬ {''}\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n            className={styles.linkStyle}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from 'react';\nimport MovieList from '../components/MovieList/MovieList';\nimport { fetchTrendingMovies } from '../services/api';\nimport Loader from '../components/Loader';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const movies = await fetchTrendingMovies();\n        // AÈ™teaptÄƒ 1 secundÄƒ Ã®nainte de a actualiza starea cu filmele\n        setTimeout(() => {\n          setTrendingMovies(movies);\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today:</h2>\n      {loading ? <Loader /> : <MovieList films={trendingMovies} />}\n      {/* Utilizarea MovieList pentru afiÈ™area listei de filme */}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["_jsx","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","_ref","films","location","useLocation","className","styles","children","map","movie","_jsxs","Link","to","concat","id","state","from","cover","poster_path","title","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","loading","setLoading","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","fetchTrendingMovies","sent","setTimeout","t0","console","error","stop","apply","arguments","Loader","MovieList","axios","params","api_key","language","response","abrupt","data","results","handleSearch","_ref2","_callee2","movieName","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}