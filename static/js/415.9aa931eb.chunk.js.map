{"version":3,"file":"static/js/415.9aa931eb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js","services/const.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieListItem\":\"MovieList_movieListItem__6DqRG\",\"linkStyle\":\"MovieList_linkStyle__TSwN3\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ol className={styles.movieList}>\n      {films.map(movie => (\n        <li key={movie.id} className={styles.movieListItem}>\n          ðŸŽ¬ {''}\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n            className={styles.linkStyle}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from 'react';\nimport MovieList from '../components/MovieList/MovieList';\nimport { fetchTrendingMovies } from '../services/api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const movies = await fetchTrendingMovies();\n        // AÈ™teaptÄƒ 1 secundÄƒ Ã®nainte de a actualiza starea cu filmele\n        setTimeout(() => {\n          setTrendingMovies(movies);\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today:</h2>\n      {loading ? <div>Loading...</div> : <MovieList films={trendingMovies} />}\n      {/* Utilizarea MovieList pentru afiÈ™area listei de filme */}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["_ref","films","location","useLocation","_jsx","className","styles","children","map","movie","_jsxs","Link","to","concat","id","state","from","cover","poster_path","title","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","loading","setLoading","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","fetchTrendingMovies","sent","setTimeout","t0","console","error","stop","apply","arguments","MovieList","axios","params","api_key","language","response","abrupt","data","results","handleSearch","_ref2","_callee2","movieName","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}