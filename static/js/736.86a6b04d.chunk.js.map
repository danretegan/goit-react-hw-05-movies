{"version":3,"file":"static/js/736.86a6b04d.chunk.js","mappings":"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","sources":["components/Loader.jsx","pages/Reviews.jsx","services/api.js","services/const.js"],"sourcesContent":["const Loader = () => {\n  return <div>Loading...</div>;\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../services/api';\nimport Loader from '../components/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        // Simulăm o întârziere de 1 secundă înainte de a marca încărcarea ca fiind completă\n        setTimeout(() => {\n          setLoading(false);\n        }, 1000);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader /> // Afișează Loader cât timp se încarcă datele\n      ) : (\n        <>\n          {reviews.length !== 0 && (\n            <div>\n              <h2>Movie Reviews</h2>\n              <ul>\n                {reviews.map(review => (\n                  <li key={review.id}>\n                    <p>{review.author}</p>\n                    <p>{review.content}</p>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          {reviews.length === 0 && (\n            <div>We don't have any reviews for this movie.</div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["_jsx","children","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","useEffect","movieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieReviews","sent","t0","console","error","setTimeout","finish","stop","apply","arguments","_Fragment","Loader","_jsxs","length","map","review","author","content","id","axios","params","api_key","language","fetchTrendingMovies","abrupt","data","results","handleSearch","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}