{"version":3,"file":"static/js/462.8b210c64.chunk.js","mappings":"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","sources":["components/SearchForm.jsx","components/MovieList.jsx","pages/Movies.jsx","services/api.js","services/const.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const SearchForm = ({ value, onChange }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Movie Search</h2>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"Search movies...\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { handleSearch } from '../services/api';\nimport { SearchForm } from '../components/SearchForm';\nimport MovieList from '../components/MovieList';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        setLoading(true);\n        const movies = await handleSearch(movieName);\n        setSearchResults(movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    search();\n  }, [movieName]);\n\n  return (\n    <div>\n      <SearchForm value={movieName} onChange={updateQueryString} />\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : searchResults.length === 0 && movieName ? (\n        <h2>No movie with this name</h2>\n      ) : (\n        <MovieList films={searchResults} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["SearchForm","_ref","value","onChange","_jsxs","onSubmit","e","preventDefault","children","_jsx","type","target","placeholder","films","location","useLocation","map","movie","Link","to","concat","id","state","from","cover","poster_path","title","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","loading","setLoading","useEffect","search","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","handleSearch","sent","t0","console","error","finish","stop","apply","arguments","query","length","MovieList","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","_ref2","_callee2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}