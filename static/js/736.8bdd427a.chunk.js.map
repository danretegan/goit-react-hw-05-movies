{"version":3,"file":"static/js/736.8bdd427a.chunk.js","mappings":"kOAwDA,UAnDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAoB1B,OAlBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEMC,EAAAA,EAAAA,IAAkBtB,GAAS,KAAD,EAA3CkB,EAAQC,EAAAI,KACdhB,EAAWW,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAErBM,QAAQC,MAAKP,EAAAK,IAAQ,QAKZ,OALYL,EAAAC,KAAA,GAGrBO,YAAW,WACThB,GAAW,EACb,GAAG,KAAMQ,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,wBAEZ,kBAZiB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAclBlB,GACF,GAAG,CAACb,KAGFgC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGxB,GACCsB,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KAEPC,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,CACsB,IAAnB5B,EAAQ+B,SACPD,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SACG5B,EAAQgC,KAAI,SAAAC,GAAM,OACjBH,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAIK,EAAOC,UACXR,EAAAA,EAAAA,KAAA,KAAAE,SAAIK,EAAOE,YAFJF,EAAOG,GAGX,SAKO,IAAnBpC,EAAQ+B,SACPL,EAAAA,EAAAA,KAAA,OAAAE,SAAK,kDAMjB,C","sources":["pages/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../services/api';\nimport Loader from '../components/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        // Simulăm o întârziere de 1 secundă înainte de a marca încărcarea ca fiind completă\n        setTimeout(() => {\n          setLoading(false);\n        }, 1000);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader /> // Afișează Loader cât timp se încarcă datele\n      ) : (\n        <>\n          {reviews.length !== 0 && (\n            <div>\n              <h2>Movie Reviews</h2>\n              <ul>\n                {reviews.map(review => (\n                  <li key={review.id}>\n                    <p>{review.author}</p>\n                    <p>{review.content}</p>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          {reviews.length === 0 && (\n            <div>We don't have any reviews for this movie.</div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","useEffect","movieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieReviews","sent","t0","console","error","setTimeout","finish","stop","apply","arguments","_jsx","_Fragment","children","Loader","_jsxs","length","map","review","author","content","id"],"sourceRoot":""}