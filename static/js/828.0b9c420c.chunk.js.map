{"version":3,"file":"static/js/828.0b9c420c.chunk.js","mappings":"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","sources":["components/MovieList.jsx","components/SearchForm.jsx","pages/Movies.jsx","services/api.js","services/const.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ value, onChange, onSubmit }) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (onSubmit) {\n      onSubmit(inputValue);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Movie Search</h2>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        placeholder=\"Search movies...\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { handleSearch } from '../services/api';\nimport { SearchForm } from '../components/SearchForm';\nimport MovieList from '../components/MovieList';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n\n  const updateQueryString = query => {\n    setSearchParams({ query });\n  };\n\n  const handleSearchSubmit = async query => {\n    try {\n      setLoading(true);\n      const movies = await handleSearch(query);\n      setSearchResults(movies);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Efectul va fi declanșat doar când se schimbă `movieName`\n  useEffect(() => {\n    if (movieName !== '') {\n      handleSearchSubmit(movieName);\n    } else {\n      // Dacă câmpul de căutare este gol, poți gestiona această situație\n      setSearchResults([]);\n    }\n  }, [movieName]);\n\n  return (\n    <div>\n      <SearchForm\n        value={movieName}\n        onChange={updateQueryString}\n        onSubmit={handleSearchSubmit}\n      />\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : searchResults.length === 0 && movieName ? (\n        <h2>No movie with this name</h2>\n      ) : (\n        <MovieList films={searchResults} />\n      )}\n      {/* Utilizarea MovieList pentru afișarea listei de filme */}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["_ref","films","location","useLocation","_jsx","children","map","movie","Link","to","concat","id","state","from","cover","poster_path","title","SearchForm","value","onSubmit","onChange","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_jsxs","e","preventDefault","type","target","placeholder","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","loading","setLoading","handleSearchSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","query","movies","_context","prev","next","handleSearch","sent","t0","console","error","finish","stop","_x","apply","arguments","useEffect","length","MovieList","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","_ref2","_callee2","_context2","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}