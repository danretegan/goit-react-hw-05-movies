{"version":3,"file":"static/js/736.82f69439.chunk.js","mappings":"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","sources":["pages/Reviews.jsx","services/api.js","services/const.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","movieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieReviews","sent","t0","console","error","stop","apply","arguments","_jsxs","_Fragment","children","length","_jsx","map","review","author","content","id","axios","params","api_key","language","fetchTrendingMovies","abrupt","data","results","handleSearch","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}