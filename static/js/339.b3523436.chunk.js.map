{"version":3,"file":"static/js/339.b3523436.chunk.js","mappings":"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","sources":["components/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/cast/Cast.module.css?3f37","pages/cast/Cast.jsx","services/api.js","services/const.js"],"sourcesContent":["import React from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"magnifying-glass-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"magnifying-glass-wrapper\"\n      glassColor=\"#c0efff\"\n      color=\"#e15b64\"\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__10h8W\",\"actorContainer\":\"Cast_actorContainer__VeHv5\",\"actorImage\":\"Cast_actorImage__KSjFQ\",\"actorTextContainer\":\"Cast_actorTextContainer__DCp2M\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../services/api';\nimport Loader from '../../components/Loader';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        // Simulăm o întârziere de 1 secundă înainte de a marca încărcarea ca fiind completă\n        setTimeout(() => {\n          setLoading(false);\n        }, 1000);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <h2>Movie Cast:</h2>\n          {cast.length !== 0 && (\n            <div className={styles.castContainer}>\n              {cast.map(actor => (\n                <div key={actor.id} className={styles.actorContainer}>\n                  <img\n                    className={styles.actorImage}\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                        : `https://i.imgur.com/p3MsT9t.jpg`\n                    }\n                    alt={actor.original_name}\n                  />\n                  <div className={styles.actorTextContainer}>\n                    <p>{actor.name}</p>\n                    <p>Character: {actor.character}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n          {cast.length === 0 && (\n            <div>We don't have any cast for this movie.</div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["_jsx","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieCast","sent","t0","console","error","setTimeout","finish","stop","apply","arguments","_Fragment","children","Loader","_jsxs","length","className","styles","map","actor","src","profile_path","concat","alt","original_name","name","character","id","axios","params","api_key","language","fetchTrendingMovies","abrupt","data","results","handleSearch","_ref2","_callee2","movieName","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}