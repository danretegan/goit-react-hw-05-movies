{"version":3,"file":"static/js/366.1afb1e64.chunk.js","mappings":"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","sources":["components/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/searchForm/SearchForm.module.css?1aef","components/searchForm/SearchForm.jsx","pages/Movies.jsx","services/api.js","services/const.js"],"sourcesContent":["import React from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"magnifying-glass-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"magnifying-glass-wrapper\"\n      glassColor=\"#c0efff\"\n      color=\"#e15b64\"\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieListItem\":\"MovieList_movieListItem__6DqRG\",\"linkStyle\":\"MovieList_linkStyle__TSwN3\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ol className={styles.movieList}>\n      {films.map(movie => (\n        <li key={movie.id} className={styles.movieListItem}>\n          ðŸŽ¬ {''}\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n            className={styles.linkStyle}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__ThZqH\",\"heading\":\"SearchForm_heading__MBcJC\",\"input\":\"SearchForm_input__a6uEo\",\"button\":\"SearchForm_button__sXC26\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchForm.module.css';\n\nexport const SearchForm = ({ value, onSubmit }) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (onSubmit) {\n      onSubmit(inputValue);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <h2 className={styles.heading}>Movie Search:</h2>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        placeholder=\"Search movies...\"\n        className={styles.input}\n      />\n      <button type=\"submit\" className={styles.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { handleSearch } from '../services/api';\nimport { SearchForm } from '../components/searchForm/SearchForm';\nimport MovieList from '../components/MovieList/MovieList';\nimport Loader from '../components/Loader';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n\n  const updateQueryString = query => {\n    setSearchParams({ query });\n  };\n\n  const performSearch = async query => {\n    try {\n      setLoading(true);\n\n      // Introduce o Ã®ntÃ¢rziere de 1 secunda:\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const movies = await handleSearch(query);\n      setSearchResults(movies);\n\n      if (movies.length === 0) {\n        setNoResults(true);\n      } else {\n        setNoResults(false);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Efectul va fi declanÈ™at doar cÃ¢nd se schimbÄƒ `movieName`\n  useEffect(() => {\n    const performSearchEffect = async () => {\n      if (movieName !== '') {\n        performSearch(movieName);\n      } else {\n        // DacÄƒ cÃ¢mpul de cÄƒutare este gol, putem decide cum sÄƒ gestionÄƒm situaÈ›ia.\n        setSearchResults([]);\n        setNoResults(false);\n      }\n    };\n\n    performSearchEffect();\n  }, [movieName]);\n\n  const handleSearchSubmit = async query => {\n    performSearch(query);\n  };\n\n  return (\n    <div>\n      <SearchForm\n        value={movieName}\n        onChange={updateQueryString}\n        onSubmit={handleSearchSubmit}\n      />\n      {loading ? (\n        <Loader />\n      ) : noResults ? (\n        <h3>No movie with this name. Try something else.</h3>\n      ) : (\n        <MovieList films={searchResults} />\n      )}\n      {/* Utilizarea MovieList pentru afiÈ™area listei de filme */}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["_jsx","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","_ref","films","location","useLocation","className","styles","children","map","movie","_jsxs","Link","to","concat","id","state","from","cover","poster_path","title","SearchForm","value","onSubmit","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","e","preventDefault","type","onChange","target","placeholder","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noResults","setNoResults","performSearch","_asyncToGenerator","_regeneratorRuntime","_callee","query","movies","_context","prev","next","Promise","resolve","setTimeout","handleSearch","sent","length","t0","console","error","finish","stop","_x","apply","arguments","useEffect","performSearchEffect","_ref2","_callee2","_context2","handleSearchSubmit","_ref3","_callee3","_context3","_x2","Loader","MovieList","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","fetchMovieDetails","movieId","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}