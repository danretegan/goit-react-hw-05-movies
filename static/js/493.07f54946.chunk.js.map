{"version":3,"file":"static/js/493.07f54946.chunk.js","mappings":"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","sources":["components/Loader.jsx","pages/Cast.jsx","services/api.js","services/const.js"],"sourcesContent":["const Loader = () => {\n  return <div>Loading...</div>;\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../services/api';\nimport Loader from '../components/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        // Simulăm o întârziere de 1 secundă înainte de a marca încărcarea ca fiind completă\n        setTimeout(() => {\n          setLoading(false);\n        }, 1000);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader /> // Afișează Loader cât timp se încarcă datele\n      ) : (\n        <>\n          {cast.length !== 0 && (\n            <div>\n              <h2>Movie Cast</h2>\n              {cast.map(actor => (\n                <div key={actor.id}>\n                  <img\n                    width=\"200px\"\n                    height=\"300px\"\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                        : `https://i.imgur.com/p3MsT9t.jpg`\n                    }\n                    alt={actor.original_name}\n                  />\n                  <p>{actor.name}</p>\n                </div>\n              ))}\n            </div>\n          )}\n          {cast.length === 0 && (\n            <div>We don't have any cast for this movie.</div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { API_KEY, API_BASE_URL } from './const';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error; // Rethrow the error to propagate it to the caller\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","const API_KEY = '2593d85031c68d42eea847806b363736';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, API_BASE_URL };\n"],"names":["_jsx","children","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieCast","sent","t0","console","error","setTimeout","finish","stop","apply","arguments","_Fragment","Loader","_jsxs","length","map","actor","width","height","src","profile_path","concat","alt","original_name","name","id","axios","params","api_key","language","fetchTrendingMovies","abrupt","data","results","handleSearch","_ref2","_callee2","movieName","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}